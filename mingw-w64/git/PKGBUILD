# Maintainer: Allegro developers <alleg-developers@lists.sourceforge.net>

_realname=allegro-git
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=5.1.8.r253.g508605b
pkgrel=1
pkgdesc="Portable library mainly aimed at video game and multimedia programming (mingw-w64)"
arch=(any)
url="http://alleg.sourceforge.net"
license=("ZLIB")
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc"
      "${MINGW_PACKAGE_PREFIX}-cmake"
      "${MINGW_PACKAGE_PREFIX}-freetype"
      "${MINGW_PACKAGE_PREFIX}-physfs"
      "${MINGW_PACKAGE_PREFIX}-libvorbis"
      "${MINGW_PACKAGE_PREFIX}-libtheora"
      "${MINGW_PACKAGE_PREFIX}-flac"
      "${MINGW_PACKAGE_PREFIX}-libpng"
      "${MINGW_PACKAGE_PREFIX}-openal"
      "${MINGW_PACKAGE_PREFIX}-dumb"
      "${MINGW_PACKAGE_PREFIX}-libjpeg-turbo"
      "git")
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs")
optdepends=(
    "${MINGW_PACKAGE_PREFIX}-dumb: allegro_audio"
    "${MINGW_PACKAGE_PREFIX}-flac: allegro_audio"
    "${MINGW_PACKAGE_PREFIX}-freetype: allegro_font"
    "${MINGW_PACKAGE_PREFIX}-libjpeg-turbo: allegro_image"
    "${MINGW_PACKAGE_PREFIX}-libpng: allegro_image"
    "${MINGW_PACKAGE_PREFIX}-libvorbis: allegro_audio"
    "${MINGW_PACKAGE_PREFIX}-openal: allegro_audio"
    "${MINGW_PACKAGE_PREFIX}-physfs: allegro_physfs"
    "${MINGW_PACKAGE_PREFIX}-libtheora: allegro_video")
options=('!strip' 'staticlibs')
#source=("${_realname}::git+git://git.code.sf.net/p/alleg/allegro")
source=("${_realname}::git+https://github.com/SiegeLord/allegro5.git#branch=libdirectx")
conflicts=("${MINGW_PACKAGE_PREFIX}-allegro")
provides=("${MINGW_PACKAGE_PREFIX}-allegro")
sha256sums=('SKIP')

pkgver() {
  cd "$srcdir/${_realname}"
  git describe --long | sed 's/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
  cd "$srcdir/${_realname}"
  sed -i "s,DS3DALG_DEFAULT,GUID_NULL,g" "addons/audio/dsound.cpp"
}

build() {
  mkdir -p ${pkgdir}${MINGW_PREFIX}
  pushd ${pkgdir}${MINGW_PREFIX} > /dev/null
  export PREFIX_WIN=`pwd -W`
  popd > /dev/null

  pushd ${MINGW_PREFIX} > /dev/null
  export PREFIX_DEPS=`pwd -W`
  popd > /dev/null

  export DXSDK_DIR=${PREFIX_DEPS}/${MINGW_CHOST}
  mkdir -p "$srcdir/build-${MINGW_CHOST}" && cd "$srcdir/build-${MINGW_CHOST}"
  ${MINGW_PREFIX}/bin/cmake \
    -G"MSYS Makefiles" \
    -DCMAKE_INSTALL_PREFIX:PATH=${PREFIX_WIN} \
    -DWANT_DEMO=OFF \
    -DWANT_DOCS=OFF \
    -DWANT_EXAMPLES=OFF \
    -DINSTALL_PKG_CONFIG_FILES=ON \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \
    -DSHARED=on \
    -DWANT_MONOLITH=off \
    ../${_realname}
  make

  ${MINGW_PREFIX}/bin/cmake \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \
    -DSHARED=on \
    -DWANT_MONOLITH=on \
    ../${_realname}
  make

  ${MINGW_PREFIX}/bin/cmake \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \
    -DSHARED=off \
    -DWANT_MONOLITH=off \
    ../${_realname}
  make

  ${MINGW_PREFIX}/bin/cmake \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \
    -DSHARED=off \
    -DWANT_MONOLITH=on \
    ../${_realname}
  make

  ${MINGW_PREFIX}/bin/cmake \
    -DCMAKE_BUILD_TYPE=Debug \
    -DSHARED=on \
    -DWANT_MONOLITH=on \
    ../${_realname}
  make

  ${MINGW_PREFIX}/bin/cmake \
    -DCMAKE_BUILD_TYPE=Debug \
    -DSHARED=off \
    -DWANT_MONOLITH=off \
    ../${_realname}
  make

  ${MINGW_PREFIX}/bin/cmake \
    -DCMAKE_BUILD_TYPE=Debug \
    -DSHARED=off \
    -DWANT_MONOLITH=on \
    ../${_realname}
  make
  
  ${MINGW_PREFIX}/bin/cmake \
    -DCMAKE_BUILD_TYPE=Debug \
    -DSHARED=on \
    -DWANT_MONOLITH=off \
    ../${_realname}
  make
}

package() {
  cd "$srcdir/build-${MINGW_CHOST}"
  make install
  cp lib/*.dll ${PREFIX_WIN}/bin
  cp lib/*.a ${PREFIX_WIN}/lib
  find "${pkgdir}${MINGW_PREFIX}" -name '*.bat' -o -name '*.def' -o -name '*.exp' | xargs -rtl1 rm
}
